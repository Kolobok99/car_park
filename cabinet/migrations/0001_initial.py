# Generated by Django 4.0.3 on 2022-04-11 05:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Почта')),
                ('password', models.CharField(max_length=128, verbose_name='Пароль')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=20, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='номер телефона')),
                ('image', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватарка')),
                ('role', models.CharField(choices=[('a', 'admin'), ('m', 'manager'), ('d', 'driver')], default='d', max_length=1, verbose_name='Роль')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='Название бредна')),
            ],
            options={
                'verbose_name': 'Марка',
                'verbose_name_plural': 'Марки',
            },
        ),
        migrations.CreateModel(
            name='DocType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Наименования документа')),
                ('type', models.CharField(choices=[('m', 'Человек'), ('a', 'Машина')], default='a', max_length=1)),
            ],
            options={
                'verbose_name': 'Тип документа',
                'verbose_name_plural': 'Типы документов',
            },
        ),
        migrations.CreateModel(
            name='TypeOfAppl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Наименование')),
                ('car_is', models.BooleanField(default=True, verbose_name='Машина или Сотрудник')),
            ],
            options={
                'verbose_name': 'Тип заявки',
                'verbose_name_plural': 'Типы заявок',
            },
        ),
        migrations.CreateModel(
            name='UserDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('start_date', models.DateField(verbose_name='Дата выдачи')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doc_owner', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='people_docs', to='cabinet.doctype')),
            ],
            options={
                'verbose_name': 'Водительский документ',
                'verbose_name_plural': 'Водительские документы',
            },
        ),
        migrations.CreateModel(
            name='FuelCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit', models.PositiveIntegerField(verbose_name='лимит')),
                ('number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.MinLengthValidator(16)], verbose_name='номер')),
                ('balance', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='остаток')),
                ('has_owner', models.BooleanField(default=False, verbose_name='Есть владелец?')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_cards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Топливная карта',
                'verbose_name_plural': 'Топливные карты',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=6, unique=True, validators=[django.core.validators.RegexValidator(message='Введите номер правильно!', regex='\\w{1}\\d{3}\\w{2}')], verbose_name='Регистрационный номер')),
                ('region_code', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(200, message='Укажите меньше 200!')], verbose_name='Код региона')),
                ('last_inspection', models.DateField(blank=True, null=True, verbose_name='последний осмотр')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cars', to='cabinet.carbrand', verbose_name='Марка')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='my_cars', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Автомобиль',
                'verbose_name_plural': 'Автомобили',
            },
        ),
        migrations.CreateModel(
            name='AutoDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('start_date', models.DateField(verbose_name='Дата выдачи')),
                ('end_date', models.DateField(verbose_name='Дата окончания')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doc_owner', to='cabinet.car')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auto_docs', to='cabinet.doctype')),
            ],
            options={
                'verbose_name': 'Документ машины',
                'verbose_name_plural': 'Документы машины',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='время создания')),
                ('time_to_execute', models.PositiveIntegerField(default=7, verbose_name='время на выполнение')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='дата окончания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активность заявки')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='cabinet.car')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_apps', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cabinet.typeofappl')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
    ]
